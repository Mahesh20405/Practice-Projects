# Spam Detection using Machine Learning

## Project Overview

This project implements a spam detection system using a Naive Bayes classifier. The model is trained to classify messages as either "ham" (legitimate) or "spam" (unwanted).


```

```

i. data.csv: Dataset containing labeled messages.
ii. Code/spamdet.py: Code to make the models.
iii. Code/predict.py: Code to run the models.
iv. Models/spamdet.py:Script to train the spam detection model.
v. Models/predict_spam.py:Script to make predictions using the trained model.
vi. README.md:Project documentation.

## Setup Instructions

1. Clone the Repository:**

   ```bash
   git clone https://github.com/Mahesh20405/Practice-Projects.git
   cd "DSA Projects/Spam Detection using ML"
   ```

2. Create and Activate a Virtual Environment:**

   ```bash
   python -m venv venv
   # On Windows
   venv\Scripts\activate
   # On macOS/Linux
   source venv/bin/activate
   ```

3. Install Required Packages:**

   ```bash
   pip install -r requirements.txt
   ```

4. Run the Spam Detection Model:**

   - **Training the Model:**
   
     ```bash
     python spamdet.py
     ```
     This script preprocesses the dataset, trains a Naive Bayes classifier, and saves the trained model and vectorizer to disk.

   - **Making Predictions:**
   
     ```bash
     python predict_spam.py
     ```
     You will be prompted to enter a message, and the script will output whether the message is spam or ham.

## Example Usage

1. Training the Model:**

   ```
   python spamdet.py
   ```

2. Making Predictions:**

   ```
   python predict_spam.py
   Enter the message: Congratulations! You've won a free ticket.
   Prediction for 'Congratulations! You've won a free ticket.': spam
   ```
